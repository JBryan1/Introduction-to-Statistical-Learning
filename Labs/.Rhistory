table(qda.class, Direction.2005)
mean(qda.class == Direction.2005)
#Set up KNN data
library(class)
train.X = Smarket[train,c("Lag1","Lag2")]
test.X = Smarket.2005[,c("Lag1","Lag2")]
train.Direction = Smarket[train,]$Direction
#KNN model where K=1 (very flexible)
set.seed(1)
knn.pred=knn(train.X,test.X,train.Direction,k=1)
table(knn.pred, Direction.2005)
mean(knn.pred == Direction.2005) #Accuracy
#KNN model where K=3 (less flexible)
knn.pred=knn(train.X,test.X,train.Direction,k=3)
table(knn.pred, Direction.2005)
mean(knn.pred == Direction.2005) #Accuracy
dim(Caravan)
summary(Caravan$Purchase)
348/nrow(Caravan)
set.seed(1)
#KNN is sensitive to scale so we standardize the data
standardized.X = scale((Caravan[,-86]))
test = 1:1000
train.X = standardized.X[-test,]
test.X = standardized.X[test,]
train.Y = Caravan$Purchase[-test]
test.Y = Caravan$Purchase[test]
#Fit the new model
knn.pred = knn(train.X, test.X, train.Y, k=1)
mean(test.Y != knn.pred) #Error rate
mean(test.Y != "No") #Empirical rate for purchased insurance
table(knn.pred, test.Y)
9/(68+9) #Sensitivity
#Decreasing KNN flexibility gives us higher sensitivity
knn.pred = knn(train.X,test.X,train.Y,k=3)
table(knn.pred,test.Y)
table(knn.pred,test.Y)[2,2]/(table(knn.pred,test.Y)[2,1]+table(knn.pred,test.Y)[2,2])
knn.pred = knn(train.X,test.X,train.Y,k=5)
table(knn.pred,test.Y)
table(knn.pred,test.Y)[2,2]/(table(knn.pred,test.Y)[2,1]+table(knn.pred,test.Y)[2,2])
#Logistic regression comparison (0.5 cutoff)
glm.fit = glm(Purchase ~ ., family = binomial, data = Caravan[-test,])
glm.probs = predict(glm.fit, type = "response", newdata = Caravan[test,])
glm.pred = rep("No",1000)
glm.pred[glm.probs > 0.5] = "Yes"
table(glm.pred, test.Y)
table(glm.pred, test.Y)[2,2] / (table(glm.pred, test.Y)[2,1] + table(glm.pred, test.Y)[2,2])
#Logistic regression comparison (0.25) cutoff)
glm.pred[glm.probs > 0.25] = "Yes"
table(glm.pred, test.Y)
table(glm.pred, test.Y)[2,2] / (table(glm.pred, test.Y)[2,1] + table(glm.pred, test.Y)[2,2])
setwd("~/Github Portfolio/Introduction-to-Statistical-Learning/Labs")
rt(1,1,10)
rt(1,1,10)
rt(1,1,10)
rt(1,1,10)
rt(1,1,10)
rt(1,1,3)
rt(1,1,3)
rt(1,1,3)
rt(1,1,3)
rt(1,1,3)
rt(1,1,3)
rt(1,1,3)
rt(1,1,3)
rt(1,1,3)
rt(1,1,1)
rt(1,1,1)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
rt(1,1,2)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = rt(1,1,2)
x[i] = dnorm(1,10,sigma)
}
plot(x)
dnorm(1,10,sigma)
dnorm(1,10,sigma)
dnorm(1,10,1)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = rt(1,1,2)
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = rt(1,1,2)
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = rt(1,1,2)
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = rt(1,1,2)
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x)
#Normal with non-constant variance
x = rep(NA,1000)
for (i in 1:1000){
sigma = rt(1,1,2)
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x)
#Normal with non-constant variance
x = rep(NA,1000)
for (i in 1:1000){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x, bins =20)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x, bin =20)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
}
plot(x)
hist(x, breaks =20)
plot(5+ 5x)
#Normal with non-constant variance
x = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
}
line = 5 + 5*x
plot(line)
hist(x, breaks=20)
line
#Normal with non-constant variance
x = rep(NA,100)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
y[i] = 5 + 1.5*x[i]
}
hist(x, breaks=20)
plot(x,y)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
rnorm(1,1,sigma)
#Normal with non-constant variance
x = rep(NA,100)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
y[i] = 5 + 1.5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
x = rep(NA,100)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
y[i] = 5 + 1.5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
x = rep(NA,100)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
y[i] = 5 + 1.5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
x = rep(NA,100)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
y[i] = 5 + 1.5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
x = rep(NA,100)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,sigma)
y[i] = 5 + 1.5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rep(NA,100)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
x[i] = rnorm(1,10,1)
y[i] = 5 + 1.5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 1.5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 5*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + rnorm(1,1,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + rnorm(1,0,2)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
lm.fit = lm(y ~ x)
summary(lm.fit)
par(mfrow(2,2))
lm.fit = lm(y ~ x)
summary(lm.fit)
par(mfrow=c(2,2))
plot(lm.fit)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + rt(1,0,1)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + abs(rt(1,0,1))
}
hist(x, breaks=20)
plot(x,y)
y
rt(1,0,1)
rt(1,0,1)
rt(1,0,q)
rt(1,0,2)
rt(1,1,1)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + abs(rt(1,1,1))
}
hist(x, breaks=20)
plot(x,y)
lm.fit = lm(y ~ x)
summary(lm.fit)
par(mfrow=c(2,2))
plot(lm.fit)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
sigma = abs(rt(1,1,2))
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.001
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.01
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.1
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.05
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
x
sort(x)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
x = sort(x)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.05
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
x = sort(x)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.001
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
x = sort(x)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.01
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
x = sort(x)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.025
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
x = sort(x)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = sqrt(i*0.025)
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
x = sort(x)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.025
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
#Normal with non-constant variance
set.seed(1)
x = rnorm(100,1,1)
x = sort(x)
y = rep(NA,100)
for (i in 1:100){
#sigma = abs(rt(1,1,2))
sigma = i*0.02
y[i] = 5 + 2*x[i] + rnorm(1,0,sigma)
}
hist(x, breaks=20)
plot(x,y)
lm.fit = lm(y ~ x)
summary(lm.fit)
par(mfrow=c(2,2))
plot(lm.fit)
